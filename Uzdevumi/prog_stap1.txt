1.
Define a class named Student that will be our data model at Jan van Eyck High School and Conservatory.

Add a constructor for Student. Have the constructor take in two parameters: a name and a year. Save those two as attributes .name and .year.
2.
Create three instances of the Student class:

Roger van der Weyden, year 10
Sandro Botticelli, year 12
Pieter Bruegel the Elder, year 8
Save them into the variables roger, sandro, and pieter.

3.
Create a Grade class, with .minimum_passing as an attribute set to 65.

4.
Give Grade a constructor. Take in a parameter score and assign it to self.score.

5.
In the body of the constructor for Student, declare self.grades as an empty list.

6.
Add an .add_grade() method to Student that takes a parameter, grade.

.add_grade() should verify that grade is of type Grade and if so, add it to the Student‘s .grades.

If grade isn’t an instance of Grade then .add_grade() should do nothing.

7.
Create a new Grade with a score of 100 and add it to pieter‘s .grades attribute using .add_grade().

8.
Great job! You’ve created two classes and defined their interactions. This is object-oriented programming! From here you could:

Write a Grade method .is_passing() that returns whether a Grade has a passing .score.
Write a Student method .get_average() that returns the student’s average score.
Add an instance variable to Student that is a dictionary called .attendance, with dates as keys and booleans as values that indicate whether the student attended school that day.